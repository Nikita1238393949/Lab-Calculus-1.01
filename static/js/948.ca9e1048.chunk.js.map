{"version":3,"file":"static/js/948.ca9e1048.chunk.js","mappings":"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","sources":["components/NumberMethod/DarbouxSumChart.tsx","components/NumberMethod/RiemannSumsChart.tsx","views/NumberMethod/NMView.tsx","views/Lab1View.tsx"],"sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport {\n    CategoryScale,\n    Chart as ChartJS,\n    Legend,\n    LinearScale,\n    LineElement,\n    PointElement,\n    Title,\n    Tooltip\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n\nconst DarbouxSumsChart = ({n}: { n: number }) => {\n    const from = 1\n    const to = 2\n    const calculateDarbouxSums = () => {\n        const step = (to - from) / n;\n        let lowerSum = 0;\n        let upperSum = 0;\n        let lowerSumPoints = [];\n        let upperSumPoints = [];\n\n        for (let i = 0; i < n; i++) {\n            const xStart = from + i * step;\n            const xEnd = xStart + step;\n            const minVal = Math.min(xStart * xStart, xEnd * xEnd);\n            const maxVal = Math.max(xStart * xStart, xEnd * xEnd);\n\n            lowerSum += minVal * step;\n            upperSum += maxVal * step;\n\n\n            lowerSumPoints.push({x: xStart, y: minVal}, {x: xEnd, y: minVal});\n            upperSumPoints.push({x: xStart, y: maxVal}, {x: xEnd, y: maxVal});\n        }\n\n        return {lowerSum, upperSum, lowerSumPoints, upperSumPoints};\n    };\n\n    const {lowerSumPoints, upperSumPoints} = calculateDarbouxSums();\n\n    const chartData = {\n        datasets: [\n            {\n                label: 'Lower Darboux Sum',\n                data: lowerSumPoints,\n                borderColor: 'rgba(75,192,192,1)',\n                borderWidth: 2,\n                fill: false,\n                stepped: true,\n            },\n            {\n                label: 'Upper Darboux Sum',\n                data: upperSumPoints,\n                borderColor: 'rgba(255,99,132,1)',\n                borderWidth: 2,\n                fill: false,\n                stepped: true,\n            }\n        ],\n    };\n\n    const options = {\n        scales: {\n            x: {\n                type: 'linear' as const,\n                position: 'bottom' as const\n            },\n        },\n        elements: {\n            line: {\n                tension: 0\n            }\n        }\n    };\n\n    return <Line options={options} data={chartData}/>;\n};\n\nexport default DarbouxSumsChart;\n","import React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport {\n    CategoryScale,\n    Chart as ChartJS,\n    Legend,\n    LinearScale,\n    LineElement,\n    PointElement,\n    Title,\n    Tooltip\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\ninterface RiemannSumsProps {\n    n: number;\n    method: 'left' | 'right' | 'middle' | 'random';\n}\n\nconst RiemannSumsChart: React.FC<RiemannSumsProps> = ({n, method}) => {\n    const from = 1\n    const to = 2\n    const calculateRiemannSums = () => {\n        const step = (to - from) / n;\n        let riemannPoints = [];\n\n        for (let i = 0; i < n; i++) {\n            const xStart = from + i * step;\n            let xi;\n\n            switch (method) {\n                case 'left':\n                    xi = xStart;\n                    break;\n                case 'right':\n                    xi = xStart + step;\n                    break;\n                case 'middle':\n                    xi = xStart + step / 2;\n                    break;\n                case 'random':\n                    xi = xStart + Math.random() * step;\n                    break;\n                default:\n                    xi = xStart;\n            }\n\n            const y = xi * xi;\n\n            riemannPoints.push({x: xStart, y: y}, {x: xStart + step, y: y});\n        }\n\n        return riemannPoints;\n    };\n\n    const riemannPoints = calculateRiemannSums();\n\n\n    const chartData = {\n        datasets: [\n            {\n                label: `Riemann Sum with ${method} equipartition`,\n                data: riemannPoints,\n                borderColor: 'rgba(255,99,132,1)',\n                borderWidth: 2,\n                fill: false,\n                stepped: true,\n            }\n        ],\n    };\n\n    const options = {\n        scales: {\n            x: {\n                type: 'linear' as const,\n                position: 'bottom' as const,\n            },\n        },\n        elements: {\n            line: {\n                tension: 0\n            }\n        }\n    };\n\n    return <Line options={options} data={chartData}/>;\n};\n\nexport default RiemannSumsChart;\n","import React, {useEffect, useState} from \"react\";\nimport DarbouxSumsChart from \"../../components/NumberMethod/DarbouxSumChart\";\nimport {Button, Card, Col, Form, Input, Radio, Row, Typography} from \"antd\";\nimport RiemannSumsChart from \"../../components/NumberMethod/RiemannSumsChart\";\nimport {CheckOutlined} from \"@ant-design/icons\";\n\ninterface RiemannValues {\n    Nvalue: number\n    TypeOf: 'left' | 'right' | 'middle' | 'random';\n}\n\nconst NMView = () => {\n    const [darbouxDataState, setdarbouxDataState] = useState(5)\n    const [riemannDataState, setRiemannDataState] = useState<RiemannValues>({Nvalue: 5, TypeOf: \"left\"});\n    const [RiemanForm] = Form.useForm()\n    const [DarbouxForm] = Form.useForm()\n    useEffect(() => {\n        RiemanForm.setFieldsValue({\n            NValue: 5,\n            TypeOf: \"left\"\n        });\n    }, );\n    return (\n        <Row gutter={16}>\n            <Col span={11}>\n                <Typography.Title level={3}>Ступенчатые фигуры</Typography.Title>\n                <Card>\n                    <DarbouxSumsChart n={darbouxDataState}/>\n                </Card>\n                <Card style={{marginTop: \"15px\"}}>\n                    <Form form={DarbouxForm} onFinish={(values) => setdarbouxDataState(values.DarbouxN)}>\n                        <Form.Item name={\"DarbouxN\"} label={\"Количество разбиений\"}>\n                            <Input/>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button icon={<CheckOutlined/>} type={\"primary\"} htmlType={\"submit\"}>\n                                Построить\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </Col>\n            <Col span={11} style={{marginLeft: \"25px\"}}>\n                <Typography.Title level={3}>Графики интегральных сумм</Typography.Title>\n                <Card>\n                    <RiemannSumsChart n={riemannDataState.Nvalue} method={riemannDataState.TypeOf}/>\n                </Card>\n                <Card style={{marginTop: \"15px\"}}>\n                    <Form form={RiemanForm} onFinish={(values) => {\n                        setRiemannDataState({\n                            Nvalue: values.NValue,\n                            TypeOf: values.TypeOf\n                        });\n                    }}>\n                        <Form.Item name={\"NValue\"} label={\"Разбиения\"}>\n                            <Input defaultValue={5}/>\n                        </Form.Item>\n                        <Form.Item name={\"TypeOf\"} label={\"Тип оснащения\"}>\n                            <Radio.Group defaultValue={\"left\"}>\n                                <Radio value={\"left\"}>Левые</Radio>\n                                <Radio value={\"right\"}>Правые</Radio>\n                                <Radio value={\"middle\"}>Средние</Radio>\n                                <Radio value={\"random\"}>Случайные</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button icon={<CheckOutlined/>} type={\"primary\"} htmlType={\"submit\"}>\n                                Построить\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default NMView","import React from \"react\";\nimport {Card, Tabs, TabsProps, Typography} from \"antd\";\nimport {BookOutlined, FieldNumberOutlined, FunctionOutlined} from \"@ant-design/icons\";\nimport NMView from \"./NumberMethod/NMView\";\n\nconst Lab1View = () => {\n    const items: TabsProps['items'] = [\n        {\n            key: \"1\",\n            label: \"Аналитическая часть\",\n            icon: <FunctionOutlined/>\n        },\n        {\n            key: \"2\",\n            label: \"Численный метод\",\n            icon: <FieldNumberOutlined/>,\n            children: <NMView/>\n        },\n        {\n            key: \"3\",\n            label: \"Отчет\",\n            icon: <BookOutlined/>\n        }\n    ]\n    return (\n        <div style={{margin: \"50px\"}}>\n            <Typography.Title>Определённый интеграл Римана ∫∫∫</Typography.Title>\n            <Card>\n                <Tabs items={items}/>\n            </Card>\n        </div>\n    )\n}\n\n\nexport default Lab1View"],"names":["ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","_ref","n","lowerSumPoints","upperSumPoints","calculateDarbouxSums","step","lowerSum","upperSum","i","xStart","xEnd","minVal","Math","min","maxVal","max","push","x","y","chartData","datasets","label","data","borderColor","borderWidth","fill","stepped","_jsx","Line","options","scales","type","position","elements","line","tension","method","riemannPoints","calculateRiemannSums","xi","random","concat","NMView","darbouxDataState","setdarbouxDataState","useState","riemannDataState","setRiemannDataState","Nvalue","TypeOf","RiemanForm","Form","useForm","DarbouxForm","useEffect","setFieldsValue","NValue","_jsxs","Row","gutter","children","Col","span","Typography","level","Card","DarbouxSumsChart","style","marginTop","form","onFinish","values","DarbouxN","Item","name","Input","Button","icon","CheckOutlined","htmlType","marginLeft","RiemannSumsChart","defaultValue","Radio","value","Lab1View","items","key","FunctionOutlined","FieldNumberOutlined","BookOutlined","margin","Tabs"],"sourceRoot":""}