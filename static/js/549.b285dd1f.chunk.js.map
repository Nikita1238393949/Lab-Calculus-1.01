{"version":3,"file":"static/js/549.b285dd1f.chunk.js","mappings":"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","sources":["components/NumberMethod/DarbouxSumCharts.tsx","components/NumberMethod/RiemannSumsChart.tsx","views/NumberMethod/NMView.tsx","views/Lab1View.tsx"],"sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport {\n    CategoryScale,\n    Chart as ChartJS,\n    Legend,\n    LinearScale,\n    LineElement,\n    PointElement,\n    Title,\n    Tooltip\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n\nconst DarbouxSumsChart = ({n}: { n: number }) => {\n    const from = 1\n    const to = 2\n    const calculateDarbouxSums = () => {\n        const step = (to - from) / n;\n        let lowerSum = 0;\n        let upperSum = 0;\n        let lowerSumPoints = [];\n        let upperSumPoints = [];\n\n        for (let i = 0; i < n; i++) {\n            const xStart = from + i * step;\n            const xEnd = xStart + step;\n            const minVal = Math.min(xStart * xStart, xEnd * xEnd);\n            const maxVal = Math.max(xStart * xStart, xEnd * xEnd);\n\n            lowerSum += minVal * step;\n            upperSum += maxVal * step;\n\n\n            lowerSumPoints.push({x: xStart, y: minVal}, {x: xEnd, y: minVal});\n            upperSumPoints.push({x: xStart, y: maxVal}, {x: xEnd, y: maxVal});\n        }\n\n        return {lowerSum, upperSum, lowerSumPoints, upperSumPoints};\n    };\n\n    const {lowerSumPoints, upperSumPoints} = calculateDarbouxSums();\n\n    const chartData = {\n        datasets: [\n            {\n                label: 'Lower Darboux Sum',\n                data: lowerSumPoints,\n                borderColor: 'rgba(75,192,192,1)',\n                borderWidth: 2,\n                fill: false,\n                stepped: true,\n            },\n            {\n                label: 'Upper Darboux Sum',\n                data: upperSumPoints,\n                borderColor: 'rgba(255,99,132,1)',\n                borderWidth: 2,\n                fill: false,\n                stepped: true,\n            }\n        ],\n    };\n\n    const options = {\n        scales: {\n            x: {\n                type: 'linear' as const,\n                position: 'bottom' as const\n            },\n        },\n        elements: {\n            line: {\n                tension: 0\n            }\n        }\n    };\n\n    return <Line options={options} data={chartData}/>;\n};\n\nexport default DarbouxSumsChart;\n","import React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport {\n    CategoryScale,\n    Chart as ChartJS,\n    Legend,\n    LinearScale,\n    LineElement,\n    PointElement,\n    Title,\n    Tooltip\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\ninterface RiemannSumsProps {\n    n: number;\n    method: 'left' | 'right' | 'middle' | 'random';\n}\n\nconst RiemannSumsChart: React.FC<RiemannSumsProps> = ({n, method}) => {\n    const from = 1\n    const to = 2\n    const calculateRiemannSums = () => {\n        const step = (to - from) / n;\n        let riemannPoints = [];\n\n        for (let i = 0; i < n; i++) {\n            const xStart = from + i * step;\n            let xi;\n\n            switch (method) {\n                case 'left':\n                    xi = xStart;\n                    break;\n                case 'right':\n                    xi = xStart + step;\n                    break;\n                case 'middle':\n                    xi = xStart + step / 2;\n                    break;\n                case 'random':\n                    xi = xStart + Math.random() * step;\n                    break;\n                default:\n                    xi = xStart;\n            }\n\n            const y = xi * xi;\n\n            riemannPoints.push({x: xStart, y: y}, {x: xStart + step, y: y});\n        }\n\n        return riemannPoints;\n    };\n\n    const riemannPoints = calculateRiemannSums();\n\n\n    const chartData = {\n        datasets: [\n            {\n                label: `Riemann Sum with ${method} equipartition`,\n                data: riemannPoints,\n                borderColor: 'rgba(255,99,132,1)',\n                borderWidth: 2,\n                fill: false,\n                stepped: true,\n            }\n        ],\n    };\n\n    const options = {\n        scales: {\n            x: {\n                type: 'linear' as const,\n                position: 'bottom' as const,\n            },\n        },\n        elements: {\n            line: {\n                tension: 0\n            }\n        }\n    };\n\n    return <Line options={options} data={chartData}/>;\n};\n\nexport default RiemannSumsChart;\n","import React, {useState} from \"react\";\nimport DarbouxSumsChart from \"../../components/NumberMethod/DarbouxSumCharts\";\nimport {Button, Card, Col, Collapse, Form, Input, Radio, Row, Typography} from \"antd\";\nimport RiemannSumsChart from \"../../components/NumberMethod/RiemannSumsChart\";\nimport {CheckOutlined} from \"@ant-design/icons\";\n\n\ninterface RiemannValues {\n    Nvalue: number\n    TypeOf: 'left' | 'right' | 'middle' | 'random';\n}\n\nconst NMView = () => {\n    const [darbouxDataState, setdarbouxDataState] = useState(5)\n    const [riemannDataState, setRiemannDataState] = useState<RiemannValues>({Nvalue: 5, TypeOf: \"random\"});\n    const [RiemanForm] = Form.useForm()\n    return (\n        <Row gutter={16}>\n            <Col span={11}>\n                <Typography.Title level={3}>Ступенчатые фигуры</Typography.Title>\n                <Card>\n                    <DarbouxSumsChart n={darbouxDataState}/>\n                </Card>\n                <Collapse style={{marginTop: \"30px\"}} items={[{\n                    key: '1', label: \"Try It Out\", children:\n                        <>\n                            <Typography.Title style={{marginTop: \"10px\"}} level={4}>Текущее n\n                                = {darbouxDataState}</Typography.Title>\n                            <Input onChange={(e) => setdarbouxDataState(Number(e.target.value))}\n                                   placeholder={\"Введите N\"} defaultValue={5}/>\n                        </>\n                }]}/>\n            </Col>\n            <Col span={11} style={{marginLeft: \"25px\"}}>\n                <Typography.Title level={3}>Графики интегральных сумм</Typography.Title>\n                <Card>\n                    <RiemannSumsChart n={riemannDataState.Nvalue} method={riemannDataState.TypeOf}/>\n                </Card>\n                <Collapse style={{marginTop: \"30px\"}} items={[{\n                    key: \"2\", label: \"Try it Out\", children:\n                        <Form form={RiemanForm} onFinish={(values) => setRiemannDataState({\n                            Nvalue: values.NValue,\n                            TypeOf: values.TypeOf\n                        })}>\n                            <Form.Item name={\"NValue\"} label={\"Разбиения\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"TypeOf\"} label={\"Тип оснащения\"}>\n                                <Radio.Group>\n                                    <Radio value={\"left\"}>Левые</Radio>\n                                    <Radio value={\"right\"}>Правые</Radio>\n                                    <Radio value={\"middle\"}>Средние</Radio>\n                                    <Radio value={\"random\"}>Случайные</Radio>\n                                </Radio.Group>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button icon={<CheckOutlined/>} type={\"primary\"} htmlType={\"submit\"}>\n                                    Построить\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                }]}/>\n            </Col>\n        </Row>\n    )\n}\n\nexport default NMView","import React from \"react\";\nimport {Card, Tabs, TabsProps, Typography} from \"antd\";\nimport {BookOutlined, FieldNumberOutlined, FunctionOutlined} from \"@ant-design/icons\";\nimport NMView from \"./NumberMethod/NMView\";\n\nconst Lab1View = () => {\n    const items: TabsProps['items'] = [\n        {\n            key: \"1\",\n            label: \"Аналитическая часть\",\n            icon: <FunctionOutlined/>\n        },\n        {\n            key: \"2\",\n            label: \"Численный метод\",\n            icon: <FieldNumberOutlined/>,\n            children: <NMView/>\n        },\n        {\n            key: \"3\",\n            label: \"Отчет\",\n            icon: <BookOutlined/>\n        }\n    ]\n    return (\n        <div style={{margin: \"50px\"}}>\n            <Typography.Title>Определённый интеграл Римана ∫∫∫</Typography.Title>\n            <Card>\n                <Tabs items={items}/>\n            </Card>\n        </div>\n    )\n}\n\n\nexport default Lab1View"],"names":["ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","_ref","n","lowerSumPoints","upperSumPoints","calculateDarbouxSums","step","lowerSum","upperSum","i","xStart","xEnd","minVal","Math","min","maxVal","max","push","x","y","chartData","datasets","label","data","borderColor","borderWidth","fill","stepped","_jsx","Line","options","scales","type","position","elements","line","tension","method","riemannPoints","calculateRiemannSums","xi","random","concat","NMView","darbouxDataState","setdarbouxDataState","useState","riemannDataState","setRiemannDataState","Nvalue","TypeOf","RiemanForm","Form","useForm","_jsxs","Row","gutter","children","Col","span","Typography","level","Card","DarbouxSumsChart","Collapse","style","marginTop","items","key","_Fragment","Input","onChange","e","Number","target","value","placeholder","defaultValue","marginLeft","RiemannSumsChart","form","onFinish","values","NValue","Item","name","Radio","Button","icon","CheckOutlined","htmlType","Lab1View","FunctionOutlined","FieldNumberOutlined","BookOutlined","margin","Tabs"],"sourceRoot":""}